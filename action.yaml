name: 'Setup Git Config'
description: 'Setup git config'
author: 'qoomon'
branding:
  icon: git-commit
  color: black
inputs:
  user:
    description: |
      User to setup.
        - `bot`    => github-actions[bot]
        - `actor`  => github.actor
        - `commit` => user from `HEAD` commit
        - `USER_NAME <USER_EMAIL>`
    required: true
    default: 'bot'
runs:
  using: "composite"
  steps:
    - name: user setup
      shell: bash
      env:
        INPUT_USER: ${{ inputs.user }}
      run: |
        set -x
        case "$INPUT_USER" in
        
          bot)
            git config --global user.name  'github-actions[bot]'
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            ;;
            
          actor)
            git config --global user.name  "${GITHUB_ACTOR}"
            git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
            ;;

          committer)
            git config user.name  "$(git log -n 1 --format=%cn)"
            git config user.email "$(git log -n 1 --format=%ce)"
            ;;
            
          *)
            user_name="$( echo "$INPUT_USER" | sed -E '/^(.*) *<(.*)> *$/!d;s//\1/')"
            user_email="$(echo "$INPUT_USER" | sed -E '/^(.*) *<(.*)> *$/!d;s//\2/')"
            if [ -n "$user_name" ] && [ -n "$user_email" ]
            then
              git config user.name  "$user_name"
              git config user.email "$user_email"
            else
              echo "ERROR: unexpected user input '$INPUT_USER'"
              echo "  Valid values: bot, actor, committer or 'USER_NAME <USER_EMAIL>'"
              exit 1
            fi
            ;;
            
        esac

        printf "user.name:  " && git config user.name
        printf "user.email: " && git config user.email
        
    - name: push setup
      shell: bash
      run: |
        git config --global push.autoSetupRemote true
